import time

user_violations = {}
user_strikes = {}
blocked_users = {}
permanent_ban = set()
active_blocks = {}

ADMIN_EMAIL = "test@admin.dk"


def format_time(seconds):
    if seconds % 60 == 0:
        minutes = seconds // 60
        if minutes == 1:
            return "1 —Ö–≤–∏–ª–∏–Ω—É"
        elif 2 <= minutes <= 4:
            return f"{minutes} —Ö–≤–∏–ª–∏–Ω–∏"
        else:
            return f"{minutes} —Ö–≤–∏–ª–∏–Ω"
    else:
        minutes = seconds // 60
        seconds_left = seconds % 60
        return f"{int(minutes):02}:{int(seconds_left):02}"


def check_flood(user_id):
    now = time.time()

    if user_id in permanent_ban:
        return True, f"üö∑ –í–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –Ω–∞–∑–∞–≤–∂–¥–∏. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ {ADMIN_EMAIL}", False

    if user_id in blocked_users:
        if now >= blocked_users[user_id]["unblock_at"]:
            del blocked_users[user_id]
            user_violations.pop(user_id, None)
            user_strikes.pop(user_id, None)
        else:
            current_count = user_violations.get(user_id, 0)
            new_count = current_count + 1
            user_violations[user_id] = new_count

            if new_count == 3:
                user_strikes[user_id] = 2
                blocked_users[user_id] = {"unblock_at": now + 180}
                return True, (
                    "üö´ –í–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ –ø—ñ–¥ —á–∞—Å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è. –ë–ª–æ–∫ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–æ –¥–æ 3 —Ö–≤–∏–ª–∏–Ω.\n"
                    "(–Ø–∫—â–æ –ø—Ä–æ—Ç—è–≥–æ–º —Ü—å–æ–≥–æ —á–∞—Å—É –≤–∏ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–µ –ø–∏—Å–∞—Ç–∏, –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –±–∞–Ω.)\n\n"
                    "(–ü—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –±–ª–æ–∫—É –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –Ω–∞–≥–∞–¥–∞—î –ø—Ä–æ –∑–≥–æ–¥—É.)"
                ), False
            elif new_count >= 4:
                user_strikes[user_id] = 3
                permanent_ban.add(user_id)
                del blocked_users[user_id]
                return True, f"üö∑ –í–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –Ω–∞–∑–∞–≤–∂–¥–∏. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ {ADMIN_EMAIL}", False
            else:
                remaining = int(blocked_users[user_id]["unblock_at"] - now)
                if remaining < 0:
                    remaining = 0
                return True, (
                    f"‚è≥ –í–∏ –∑–Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –ø—ñ–¥ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è–º. –î–æ—á–µ–∫–∞–π—Ç–µ—Å—å —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ {format_time(remaining)}."
                ), False

    new_count = user_violations.get(user_id, 0) + 1
    user_violations[user_id] = new_count

    if new_count == 1:
        return True, (
            "‚ö†Ô∏è –°–ø–µ—Ä—à—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–∞—Ç–∏ –∑–≥–æ–¥—É –Ω–∞ –æ–±—Ä–æ–±–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö.\n\n"
            "üîê [–û–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ –ø–æ–ª—ñ—Ç–∏–∫–æ—é](https://bevarukraine.dk/uk/osobysti-dani/)\n\n"
            "–ë–µ–∑ –∑–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å –±–æ—Ç–æ–º –Ω–µ–º–æ–∂–ª–∏–≤–æ."
        ), True
    elif new_count == 2:
        user_strikes[user_id] = 1
        blocked_users[user_id] = {"unblock_at": now + 60}
        return True, (
            f"üö´ –í–∏ —Ç–∏–º—á–∞—Å–æ–≤–æ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –Ω–∞ {format_time(60)} –∑–∞ –≤—ñ–¥–º–æ–≤—É –∞–±–æ —ñ–≥–Ω–æ—Ä—É–≤–∞–Ω–Ω—è –Ω–∞–¥–∞–Ω–Ω—è –∑–≥–æ–¥–∏.\n\n"
            "(–ü—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –±–ª–æ–∫—É –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –Ω–∞–≥–∞–¥–∞—î –ø—Ä–æ –∑–≥–æ–¥—É.)"
        ), False
    else:
        return True, "‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞.", True


def track_blocked_user(user_id, chat_id):
    active_blocks[user_id] = chat_id


def get_expired_unblocks():
    now = time.time()
    expired = []
    for user_id, entry in list(blocked_users.items()):
        if now >= entry["unblock_at"]:
            print(
                f"[DEBUG] –†–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è –¥–ª—è user_id {user_id}: now={now}, unblock_at={entry['unblock_at']}")
            chat_id = active_blocks.pop(user_id, None)
            if chat_id:
                expired.append((user_id, chat_id))
            del blocked_users[user_id]
            user_violations.pop(user_id, None)
            user_strikes.pop(user_id, None)
    return expired
